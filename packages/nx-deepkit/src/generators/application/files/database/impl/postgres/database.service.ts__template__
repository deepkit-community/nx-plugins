import { inject, injectable } from '@deepkit/injector';
import { Database } from '@deepkit/orm';
import { PostgresDatabaseAdapter } from '@deepkit/postgres';
import { entity, t } from '@deepkit/type';
import { databaseConfig } from './database.config';

@entity.name('user').collectionName('users')
export class User {
  @t.primary.autoIncrement public id!: number;
  @t.index({ unique: true }) email!: string;
}

@injectable()
  export class AppDb extends Database {

  constructor(@inject(databaseConfig.all()) config: typeof databaseConfig.type) {
    super(
      new PostgresDatabaseAdapter({
        host: config.HOST,
        database: config.NAME,
        port: config.HOST_PORT,
        user: config.USER,
        password: config.PASSWORD,
      }),
      [User]
    );
  }
}
