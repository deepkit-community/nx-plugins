import { injectable } from '@deepkit/injector';
import { Database } from '@deepkit/orm';
import { PostgresDatabaseAdapter } from '@deepkit/postgres';
import { entity, t } from '@deepkit/type';
import { appConfig } from './app.config';

@(entity.name('user').collectionName('users'))
export class User {
  @t.primary.autoIncrement public id!: number;
  @t.index({ unique: true }) email!: string;
}

class DbConfig extends appConfig.slice('<%= dbConfigPrefix %>') { }

@injectable
export class AppDatabase extends Database {
  constructor(
    config: DbConfig
  ) {
    const { <%= dbConfigPrefix %>: { host, name, hostPort, password, user } } = config;
    super(
      new PostgresDatabaseAdapter({
        host,
        database: name,
        port: hostPort,
        user,
        password
      }),
      [User]
    );
  }
}
